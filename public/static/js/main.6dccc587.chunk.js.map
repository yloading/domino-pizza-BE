{"version":3,"sources":["styles.js","components/Header.js","components/Controls.js","components/Input.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","backgroundImage","backgroundRepeat","backgroundSize","extendedIcon","marginRight","spacing","text","color","appBarWrapper","width","margin","button","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","fontWeight","textarea","viewOrders","modalButtons","cardGrid","card","flexDirection","cardContent","flexGrow","orderHeader","marginTop","Header","classes","AppBar","position","style","Toolbar","className","Typography","variant","onClick","scroll","scrollToTop","to","smooth","duration","Controls","Input","props","name","label","value","error","onChange","other","TextField","helperText","React","useState","open","setOpen","inputText","setInputText","responseMsg","setResponseMsg","status","setStatus","orders","setOrders","searchTerm","setSearchTerm","getOrder","axios","get","then","response","data","useEffect","handleClose","onCancel","Grid","container","direction","minHeight","item","align","gutterBottom","paragraph","Fab","size","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","multiline","minRows","maxRows","e","target","onValueChange","Alert","severity","Button","inputRequest","pml","post","catch","console","log","onSubmit","Container","event","filter","val","map","order","xs","sm","md","Card","CardContent","order_number","Pizzas","pizza","pizza_number","crust","type","Pizza_Addons","reverse","addons","toppings_area","toppings_item","pizza_id","createTheme","typography","fontFamily","join","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAgEeA,EA9DGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQ,QACRC,gBAAgB,OAAD,OAAkC,qBAAlC,KACfC,iBAAkB,YAClBC,eAAgB,SAEpBC,aAAc,CACVC,YAAaP,EAAMQ,QAAQ,IAE/BC,KAAM,CACFC,MAAO,WAEXC,cAAe,CACXC,MAAO,MACPC,OAAQ,UAEZC,OAAQ,CACJD,OAAQb,EAAMQ,QAAQ,IAE1BO,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,MAAO,CACHC,gBAAiBpB,EAAMqB,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWxB,EAAMyB,QAAQ,GACzBC,QAAS1B,EAAMQ,QAAQ,EAAG,EAAG,GAC7BmB,WAAY,OAEhBC,SAAU,CACNF,QAAS,OACTV,QAAS,OACTE,eAAgB,UAEpBW,WAAY,CACRnB,MAAO,WAEXoB,aAAc,CACVJ,QAAS,OACTV,QAAS,OACTE,eAAgB,UAGpBa,SAAU,CACNL,QAAS,UAEbM,KAAM,CACF9B,OAAQ,OACRc,QAAS,OACTiB,cAAe,UAEnBC,YAAa,CACTC,SAAU,GAEdC,YAAa,CACTC,UAAW,Y,oECvDJ,SAASC,IACpB,IAAMC,EAAUzC,IAEhB,OACI,8BACI,cAAC0C,EAAA,EAAD,CAAQC,SAAS,QAAQC,MAAO,CAAEtB,gBAAiB,WAAnD,SACI,eAACuB,EAAA,EAAD,CAASC,UAAWL,EAAQ5B,cAA5B,UACI,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEhC,MAAO,UAAWyB,SAAU,KAAOY,QAAS,kBAC9EC,gBAAOC,eADP,4BAOA,cAAC,OAAD,CAAML,UAAWL,EAAQV,WAAYqB,GAAG,QAAQC,QAAQ,EAAMC,SAAU,IAAxE,+B,qLChBpB,IAIeC,EAJE,CACbC,MCDW,SAAeC,GAE1B,IAAQC,EAAuDD,EAAvDC,KAAMC,EAAiDF,EAAjDE,MAAOC,EAA0CH,EAA1CG,MAArB,EAA+DH,EAAnCI,aAA5B,MAAkC,KAAlC,EAAwCC,EAAuBL,EAAvBK,SAAaC,EAArD,YAA+DN,EAA/D,GAEA,OACI,cAACO,EAAA,EAAD,yBACIhB,QAAQ,WACRW,MAAOA,EACPD,KAAMA,EACNE,MAAOA,EACPE,SAAUA,GACNC,GACCF,GAAS,CAACA,OAAM,EAAMI,WAAWJ,O,0BCAnC,SAASrB,IACpB,IAAMC,EAAUzC,IAChB,EAAwBkE,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4BN,mBAAS,QAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KAEA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,WACbC,IAAMC,IAAI,eACLC,MAAK,SAAAC,GAAQ,OAAIP,EAAUO,EAASC,UAG7CC,qBAAU,WACNN,MACD,IAEH,IAIMO,EAAc,WAClBlB,GAAQ,IAOJmB,EAAW,WACbR,IACAO,KAsBJ,OACA,gCACI,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASvE,eAAe,SAASD,WAAW,SAASyB,MAAO,CAAEgD,UAAW,QAAnG,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAAC9C,EAAA,EAAD,CAAYD,UAAWL,EAAQ9B,KAAMqC,QAAQ,KAAK8C,MAAM,SAASC,cAAY,EAA7E,6CAIJ,cAACN,EAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAAC9C,EAAA,EAAD,CAAYD,UAAWL,EAAQ9B,KAAMqC,QAAQ,KAAK8C,MAAM,SAASE,WAAS,EAA1E,oEAIJ,eAACP,EAAA,EAAD,CAAMI,MAAI,EAAV,UACI,eAACI,EAAA,EAAD,CAAKC,KAAK,SAASlD,QAAQ,WAAWJ,MAAO,CAAEtB,gBAAiB,WAAa2B,QAlDtE,WACjBoB,GAAQ,IAiDE,UACI,cAAC,IAAD,CAAkBvB,UAAWL,EAAQjC,eADzC,eAIA,cAAC2F,EAAA,EAAD,CACI,kBAAgB,yBAChB,mBAAiB,+BACjBrD,UAAWL,EAAQxB,MACnBmD,KAAMA,EACNgC,QAAsBZ,EACtBa,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACfC,QAAS,KATb,SAYI,cAACC,EAAA,EAAD,CAAMC,GAAIvC,EAAV,SACI,sBAAKtB,UAAWL,EAAQpB,MAAxB,UACI,oBAAIuF,GAAG,yBAAP,yDACA,iCACI,qBAAK9D,UAAWL,EAAQX,SAAxB,SACI,cAACkC,EAAA,EAAD,CACIhB,QAAQ,WACR6D,WAAS,EACTC,QAAS,GACTC,QAAS,GACTjD,SAAU,SAACkD,GAAD,OApExB,SAACA,GACnBzC,EAAayC,EAAEC,OAAOrD,OAmE2BsD,CAAcF,QAIxB,UAAXtC,EAAqB,eAACyC,EAAA,EAAD,CAAOC,SAAS,QAAhB,2CAAkD5C,EAAlD,OAA0E,KAGpF,YAAXE,EAAuB,cAACyC,EAAA,EAAD,CAAOC,SAAS,UAAhB,gEAAkF,KAI7G,sBAAKtE,UAAWL,EAAQT,aAAxB,UACI,cAACqF,EAAA,EAAD,CAAQrE,QAAQ,YAAYpC,MAAM,YAAYqC,QAAS,kBAAMuC,KAA7D,oBACA,cAAC6B,EAAA,EAAD,CAAQrE,QAAQ,YAAYpC,MAAM,UAAUqC,QAAS,kBAxEpE,WACb,IAAMqE,EAAe,CACjBC,IAAKjD,GAGTW,IAAMuC,KAAK,cAAeF,GACzBnC,MAAK,SAAAC,GACFX,EAAeW,GACfT,EAAU,WACVK,OAEHyC,OAAM,SAAA5D,GACH6D,QAAQC,IAAI9D,EAAMuB,SAASC,MAC3BZ,EAAeZ,EAAMuB,SAASC,MAC9BV,EAAU,YA0DyEiD,IAA3D,uCAU5B,eAACC,EAAA,EAAD,WACI,oBAAI/E,UAAWL,EAAQH,YAAasE,GAAG,QAAvC,oBACA,cAAC/D,EAAA,EAAD,UACI,cAAC,EAASW,MAAV,CACIG,MAAM,eACNf,MAAO,CAAE9B,MAAO,QAChBgD,SAAU,SAAAgE,GAAU/C,EAAc+C,EAAMb,OAAOrD,YAGvD,qBAAKd,UAAWL,EAAQR,SAAxB,SACI,cAACwD,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,EAAzB,SAEQkE,EAAOmD,QAAO,SAACC,GACX,GAAmB,KAAflD,EACA,OAAOkD,KAGZC,KAAI,SAAAC,GAAK,OACP,cAACzC,EAAA,EAAD,CAAMI,MAAI,EAA0BsC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAvD,SACG,cAACC,EAAA,EAAD,CAAMxF,UAAWL,EAAQP,KAAzB,SACI,eAACqG,EAAA,EAAD,CAAazF,UAAWL,EAAQL,YAAhC,UACI,eAACW,EAAA,EAAD,CAAYgD,cAAY,EAAC/C,QAAQ,KAAjC,2BACmBkF,EAAMM,gBAGrBN,EAAMO,OAAOR,KAAI,SAAAS,GAAK,OACjB,gCACG,eAAC3F,EAAA,EAAD,CAAYgD,cAAY,EAAxB,mBACW2C,EAAMC,aADjB,MACkCD,EAAMxC,KADxC,KACgDwC,EAAME,MADtD,KAC+DF,EAAMG,QAGlD,WAAfH,EAAMG,MACNH,EAAMI,aAAaC,UAAUd,KAAI,SAAAe,GAAM,OACnC,8BACA,eAACjG,EAAA,EAAD,uBACciG,EAAOC,cADrB,MACuCD,EAAOE,kBAFpCF,EAAOpC,SAPlB8B,EAAMS,mBARpBjB,EAAMM,2BCnJnD,IAAMtI,EAAQkJ,YAAY,CACxBC,WAAY,CACVC,WAAY,CACV,QACA,cACAC,KAAK,QAiBIC,MAdf,WACE,IAAM/G,EAAUzC,IAEhB,OACE,eAACyJ,EAAA,EAAD,CAAevJ,MAAOA,EAAtB,UACE,cAACwJ,EAAA,EAAD,IACA,sBAAK5G,UAAWL,EAAQtC,KAAxB,UACE,cAACqC,EAAD,IACA,cAAC,EAAD,WCVOmH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6dccc587.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/pizza.jpeg'})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    text: {\r\n        color: '#fafafa',\r\n    },\r\n    appBarWrapper: {\r\n        width: '80%',\r\n        margin: '0 auto'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        fontWeight: '2px'\r\n    },\r\n    textarea: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    viewOrders: {\r\n        color: '#E02C28',\r\n    },\r\n    modalButtons: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    cardGrid: {\r\n        padding: '20px 0'\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    cardContent: {\r\n        flexGrow: 5,\r\n    },\r\n    orderHeader: {\r\n        marginTop: '6rem'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport { Typography, AppBar, Toolbar} from '@material-ui/core';\r\nimport useStyles from '../styles';\r\nimport { Link, animateScroll as scroll } from 'react-scroll';\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" style={{ backgroundColor: '#E4A927' }}>\r\n                <Toolbar className={classes.appBarWrapper}>\r\n                    <Typography variant=\"h6\" style={{ color: '#E02C28', flexGrow: '1' }} onClick={() =>\r\n                    scroll.scrollToTop()}>\r\n                        Domino's Pizza\r\n                    </Typography>\r\n                    {/* <IconButton>\r\n                        <StorageSharpIcon className={classes.viewOrders}/>\r\n                    </IconButton> */}\r\n                    <Link className={classes.viewOrders} to=\"order\" smooth={true} duration={1000}>\r\n                        See Orders\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import Input from \"./Input\";\r\n\r\n\r\nconst Controls = {\r\n    Input,\r\n}\r\n\r\nexport default Controls; ","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value, error=null, onChange, ...other } = props;\r\n\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true, helperText:error})}\r\n        />\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Typography, Grid, Card, CardContent, Container, Toolbar } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Controls from './Controls';\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport useStyles from '../styles';\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [inputText, setInputText] = useState('');\r\n    const [responseMsg, setResponseMsg] = useState('');\r\n    const [status, setStatus] = useState('none');\r\n\r\n    const [orders, setOrders] = useState([])\r\n\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    const getOrder = () => {\r\n        axios.get('/api/orders')\r\n            .then(response => setOrders(response.data));\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getOrder();\r\n    }, []);\r\n\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const onValueChange = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const onCancel = () => {\r\n        getOrder(); \r\n        handleClose();\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        const inputRequest = {\r\n            pml: inputText\r\n        }\r\n        \r\n        axios.post('/api/orders', inputRequest)\r\n        .then(response => {\r\n            setResponseMsg(response)\r\n            setStatus('success');\r\n            getOrder();  \r\n        })\r\n        .catch(error => {\r\n            console.log(error.response.data)\r\n            setResponseMsg(error.response.data);\r\n            setStatus('error'); \r\n        });\r\n        \r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"90vh\" }}>\r\n            <Grid item>\r\n                <Typography className={classes.text} variant=\"h2\" align=\"center\" gutterBottom>\r\n                    TRIPLE THE FUN IN EVERY BITE!\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography className={classes.text} variant=\"h5\" align=\"center\" paragraph>\r\n                    Weve changed our delivery areas to better serve you!\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Fab size='medium' variant=\"extended\" style={{ backgroundColor: '#E4A927' }} onClick={handleOpen}>\r\n                    <ControlPointIcon className={classes.extendedIcon} />\r\n                        Order Now\r\n                </Fab>\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={open}\r\n                    onClose={handleClose, onCancel}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={open}>\r\n                        <div className={classes.paper}>\r\n                            <h2 id=\"transition-modal-title\">Please enter the order in PML format below.</h2>\r\n                            <form>\r\n                                <div className={classes.textarea}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        multiline\r\n                                        minRows={15}\r\n                                        maxRows={20}\r\n                                        onChange={(e) => onValueChange(e)}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    status === 'error' ? <Alert severity=\"error\">This is an error alert — {responseMsg}!</Alert> : null\r\n                                }\r\n                                {\r\n                                    status === 'success' ? <Alert severity=\"success\">Success — check it out in the Orders section!</Alert> : null\r\n                                }\r\n                                \r\n                                \r\n                                <div className={classes.modalButtons}>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => onCancel()}>Cancel</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => onSubmit()}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </Grid>\r\n        </Grid>\r\n        <Container>\r\n            <h1 className={classes.orderHeader} id=\"order\">Orders</h1>\r\n            <Toolbar>\r\n                <Controls.Input\r\n                    label=\"Search Order\"\r\n                    style={{ width: '100%' }}\r\n                    onChange={event => {setSearchTerm(event.target.value)}}\r\n                />    \r\n            </Toolbar>\r\n            <div className={classes.cardGrid}>\r\n                <Grid container spacing={4}>\r\n                    {\r\n                        orders.filter((val) => {\r\n                            if (searchTerm === \"\") {\r\n                                return val\r\n                            } \r\n                           \r\n                        }).map(order => \r\n                            (<Grid item key={order.order_number} xs={12} sm={6} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <CardContent className={classes.cardContent}>\r\n                                        <Typography gutterBottom variant='h5'>\r\n                                            Order Number: {order.order_number}\r\n                                        </Typography>\r\n                                        {\r\n                                            order.Pizzas.map(pizza => \r\n                                                (<div key={pizza.pizza_id}>\r\n                                                    <Typography gutterBottom>\r\n                                                        Pizza {pizza.pizza_number} - {pizza.size}, {pizza.crust}, {pizza.type}\r\n                                                    </Typography>\r\n                                                    {\r\n                                                        pizza.type === 'custom' &&\r\n                                                        pizza.Pizza_Addons.reverse().map(addons => (\r\n                                                            <div key={addons.id}>\r\n                                                            <Typography>\r\n                                                                Toppings {addons.toppings_area} - {addons.toppings_item}\r\n                                                            </Typography>\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>))     \r\n                                        }\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>))\r\n                    }   \r\n                </Grid>\r\n            </div>\r\n        </Container>\r\n    </div>\r\n    );\r\n}","import useStyles from './styles'\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Header from './components/Header';\nimport Home from './components/Home'\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\n      'Kanit',\n      'sans-serif',\n    ].join(','),\n  },});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <Header />\n        <Home />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}